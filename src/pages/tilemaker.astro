---
import Layout from "../layouts/Layout.astro";
---

<Layout title="SVGuez TileMaker">
  <div class="hero bg-base-200">
    <div class="w-full hero-content flex-col lg:flex-row-reverse lg:space-x-24">
      <img src="/favicon.svg" class="max-w-sm rounded-lg shadow-2xl" />
      <div>
        <h1 class="text-5xl font-bold">SVGuez TileMaker</h1>
        <p class="py-6">
          The best way to split your bulky un-optimized crappy SVG image to
          highly performant LeafletJS compatible tiles!
        </p>
        <input
          type="file"
          class="file-input file-input-bordered w-full max-w-sm"
        />
      </div>
    </div>
  </div>

  <div
    id="svg-container"
    class="absolute invisible left-0 top-0 w-screen h-screen overflow-hidden -z-50"
  >
  </div>
</Layout>
<script>
  import JSZip from "jszip";
  import { createTiles } from "../lib/tilemaker";
  import { loadSVG, saveBlob } from "../lib/utils";

  const svg_container = document.getElementById(
    "svg-container"
  ) as HTMLDivElement;

  const svg = await loadSVG("elecgeo/ELECGEO.PCT.opti.svg");
  svg_container.appendChild(svg);

  /*
  console.log("Creating tiles...");
  const tiles = await createTiles(svg, 3);

  // Save to zip
  console.log("Saving to zip...");
  const zip = new JSZip();
  for (const [key, tile] of tiles) {
    zip.file(key, tile.outerHTML);
  }
  console.log("Saved to zip");

  const blob = await zip.generateAsync({ type: "blob" });

  saveBlob(blob, "tiles.zip");
  */
</script>
