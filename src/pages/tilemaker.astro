---
import SVGUpload from "../components/SVGUpload.astro";
import Settings from "../components/Settings.astro";
import StartButton from "../components/StartButton.astro";
import Stats from "../components/Stats.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="SVGuez TileMaker">
  <div class="hero bg-base-200">
    <div class="w-full hero-content flex-col lg:flex-row-reverse lg:space-x-24">
      <object
        type="image/svg+xml"
        data="/favicon.svg"
        class="max-w-sm rounded-lg shadow-2xl"></object>
      <div>
        <h1 class="text-5xl font-bold">SVGuez TileMaker</h1>
        <p class="py-6">
          The best way to split your bulky un-optimized crappy SVG image to
          highly performant LeafletJS compatible tiles!
        </p>
        <SVGUpload />
      </div>
    </div>
  </div>

  <div class="flex w-full">
    <div class="grid flex-grow place-items-center">
      <Settings />
    </div>

    <div class="divider divider-horizontal w-fit">
      <StartButton />
    </div>

    <div class="grid flex-grow place-items-center">
      <Stats />
    </div>
  </div>
  <div
    id="svg-container"
    class="absolute overflow-hidden top-0 left-0 w-screen h-screen -z-50"
  >
  </div>
</Layout>
<script>
  import JSZip from "jszip";
  import { createTiles } from "../lib/tilemaker";
  import { loadSVG, saveBlob } from "../lib/utils";

  const svg_container = document.getElementById(
    "svg-container"
  ) as HTMLObjectElement;

  /*
  const svg = await loadSVG("elecgeo/ELECGEO.PCT.opti.svg");
  svg_container.appendChild(svg);

  console.log("Creating tiles...");
  const tiles = await createTiles(svg, 3);

  // Save to zip
  console.log("Saving to zip...");
  const zip = new JSZip();
  for (const [key, tile] of tiles) {
    zip.file(key, tile.outerHTML);
  }
  console.log("Saved to zip");

  const blob = await zip.generateAsync({ type: "blob" });

  saveBlob(blob, "tiles.zip");
  */
</script>
<style is:global>
  html {
    height: 100vh;
  }

  body {
    display: block;
    height: 100%;
  }
</style>
